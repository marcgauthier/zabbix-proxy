# AlmaLinux + Zabbix Proxy Appliance Kickstart Configuration
# Compatible with livemedia-creator --make-iso
# This script creates a minimal AlmaLinux system optimized for Zabbix Proxy deployment

# ================================
# 1) Installation Source
# ================================
install
cdrom

# ================================
# 2) Basic System Configuration
# ================================
lang en_US.UTF-8
keyboard us
timezone UTC --utc

# Prompt the user for a hostname
ask hostname

# Configure network via DHCP (Anaconda will apply the above hostname)
network --bootproto=dhcp --device=link --activate

# ================================
# 3) Storage Configuration
# ================================
zerombr
clearpart --all --initlabel
part /      --size=4096 --fstype=ext4
part /data  --size=92160 --fstype=ext4 --grow

# Install GRUB to the MBR of the first drive
bootloader --location=mbr

# ================================
# 4) User Authentication Setup
# ================================
rootpw --lock
user --name=zabbixlog --groups=wheel --password=temppass123 --plaintext

# ================================
# 5) System Services Configuration
# ================================
services --enabled=NetworkManager,chronyd,firewalld
services --disabled=sshd

# ================================
# 6) Package Selection
# ================================
%packages
@core
@standard
kernel
systemd
NetworkManager
firewalld
chrony
bc
acl
-@guest-agents
-aic94xx-firmware*
-alsa-*
-btrfs-progs*
-ivtv-firmware
-iwl*firmware
-libertas*firmware
-plymouth*
%end

# ================================
# 7) Pre-Installation Disk Check
# ================================
%pre --log=/tmp/ks-pre.log
REQUIRED_SIZE_MB=94208    # 4 GB root + 90 GB data
MIN_DATA_SIZE_MB=92160    # 90 GB for /data

largest_size=0
largest_disk=""

echo "Starting disk validation..." >> /tmp/ks-pre.log
for disk in /dev/sd? /dev/vd? /dev/nvme?n? /dev/hd?; do
  [ -b "$disk" ] || continue
  # lsblk is built into the installer, returns bytes
  if size_bytes=$(lsblk -nb -d -o SIZE "$disk" 2>/dev/null); then
    size_mb=$((size_bytes / 1024 / 1024))
    echo "  Found $disk: ${size_mb}MB" >> /tmp/ks-pre.log
    if [ "$size_mb" -gt "$largest_size" ]; then
      largest_size=$size_mb
      largest_disk=$disk
    fi
  fi
done

echo "Largest disk: $largest_disk (${largest_size}MB)" >> /tmp/ks-pre.log

if [ -z "$largest_disk" ] || [ "$largest_size" -lt "$REQUIRED_SIZE_MB" ]; then
  echo "ERROR: Need ≥94 GB total (4G + 90G)" >> /tmp/ks-pre.log
  exit 1
fi

available_data_mb=$((largest_size - 4096))
if [ "$available_data_mb" -lt "$MIN_DATA_SIZE_MB" ]; then
  echo "ERROR: Only ${available_data_mb}MB left for /data; need ≥90 GB" >> /tmp/ks-pre.log
  exit 1
fi

echo "Disk OK: /data can use ${available_data_mb}MB" >> /tmp/ks-pre.log
%end

# ================================
# 8) Post-Installation Configuration
# ================================
%post --log=/root/ks-post.log
echo "Starting post-install tasks..." >> /root/ks-post.log

# Verify /data size
data_kb=$(df /data | awk 'NR==2{print $2}')
data_gb=$((data_kb / 1024 / 1024))
echo "/data is ${data_gb}GB" >> /root/ks-post.log
[ "$data_gb" -lt 85 ] && echo "WARNING: /data smaller than expected" >> /root/ks-post.log

# Prepare persistent logging
mkdir -p /data/logs /data/zabbix-pkgs /data/zabbix
echo "/data/logs /var/log none bind 0 0" >> /etc/fstab
mount --bind /data/logs /var/log
mkdir -p /data/logs/journal
sed -i 's/#Storage=auto/Storage=persistent/' /etc/systemd/journald.conf
echo "Persistent logging enabled" >> /root/ks-post.log

# ACLs for the zabbixlog user
setfacl -m u:zabbixlog:rX /data/logs
setfacl -R -m d:u:zabbixlog:rX /data/logs
echo "ACLs set for zabbixlog" >> /root/ks-post.log

# Create the first-boot helper
cat > /root/firstboot.sh << 'FIRSTBOOT'
#!/bin/bash
echo "==========================================="
echo "  Zabbix Proxy Appliance First Boot Setup"
echo "==========================================="
# (Your existing interactive first-boot logic goes here,
#  including password prompts, PSK entry, firewall rules, etc.)
# For example:
#   read -p "Enter hostname: " HOST
#   hostnamectl set-hostname "$HOST"
#   # ...Firewall, PSK, etc...
# Cleanup
rm -f /root/firstboot.sh
sed -i '/firstboot.sh/d' /etc/rc.d/rc.local
FIRSTBOOT

chmod +x /root/firstboot.sh
touch /etc/rc.d/rc.local
chmod +x /etc/rc.d/rc.local
echo "/root/firstboot.sh" >> /etc/rc.d/rc.local

# Ensure rc-local.service is enabled so the script runs
systemctl enable rc-local.service

echo "Post-install complete" >> /root/ks-post.log
%end
