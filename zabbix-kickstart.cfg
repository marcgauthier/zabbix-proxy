# Kickstart for AlmaLinux + Zabbix Proxy Appliance Live ISO
# Compatible with livemedia-creator --make-iso

# ================================
# Basic Configuration
# ================================
lang en_US.UTF-8
keyboard us
timezone UTC --utc

# ================================
# Network Configuration
# ================================
network --bootproto=dhcp --device=link --activate --hostname=zabbix-proxy

# ================================
# Installation Method & Repos
# ================================
url --url="http://repo.almalinux.org/almalinux/9/BaseOS/x86_64/os/"
repo --name="BaseOS" --baseurl="http://repo.almalinux.org/almalinux/9/BaseOS/x86_64/os/"
repo --name="AppStream" --baseurl="http://repo.almalinux.org/almalinux/9/AppStream/x86_64/os/"

# ================================
# Disk Partitioning
# ================================
zerombr
clearpart --all --initlabel
part / --size=4096 --fstype=ext4
part /data --size=2048 --fstype=ext4 --grow

# ================================
# Authentication
# ================================
rootpw --lock
user --name=zabbixlog --groups=wheel --password=changeme --plaintext

# ================================
# Services
# ================================
services --enabled=NetworkManager,chronyd,firewalld
services --disabled=sshd

# ================================
# Packages
# ================================
%packages
@core
@standard

# System essentials
kernel
systemd
NetworkManager
firewalld
chrony

# Live media requirements
dracut-live
dracut-network
dracut-config-generic
live-media
syslinux
genisoimage
isomd5sum

# Database and tools
mariadb-server
acl
bind-utils
wget
curl
tar
gzip

# Remove unnecessary packages
-@guest-agents
-aic94xx-firmware*
-alsa-*
-btrfs-progs*
-ivtv-firmware
-iwl*firmware
-libertas*firmware
-plymouth*
%end

# ================================
# Post Installation
# ================================
%post --log=/root/ks-post.log

# Create directory structure
mkdir -p /data/logs /data/zabbix-pkgs /data/zabbix

# Setup log directory bind mount
cat >> /etc/fstab << 'EOF'
/data/logs /var/log none bind 0 0
EOF

# Move existing logs and mount
if [ -d /var/log ] && [ "$(ls -A /var/log 2>/dev/null)" ]; then
    cp -a /var/log/* /data/logs/ 2>/dev/null || true
fi
mount --bind /data/logs /var/log

# Configure persistent logging
mkdir -p /data/logs/journal
sed -i 's/#Storage=auto/Storage=persistent/' /etc/systemd/journald.conf

# Setup zabbixlog user permissions
setfacl -m u:zabbixlog:rX /data/logs
setfacl -R -m d:u:zabbixlog:rX /data/logs

# Create first boot configuration script
cat > /root/firstboot.sh << 'FIRSTBOOT'
#!/bin/bash
echo "=== Zabbix Proxy First Boot Setup ==="

# PSK Key Setup
while true; do
    read -s -p "Enter 32-character PSK key: " PSK
    echo
    read -s -p "Confirm PSK key: " PSK2
    echo
    if [[ "$PSK" == "$PSK2" && ${#PSK} -eq 32 ]]; then
        break
    fi
    echo "PSK mismatch or wrong length. Must be exactly 32 characters."
done

mkdir -p /data/zabbix
echo "$PSK" > /data/zabbix/psk.key
chmod 600 /data/zabbix/psk.key

# MariaDB Setup
systemctl enable mariadb
systemctl start mariadb
sleep 3

# MySQL Password Setup
while true; do
    read -s -p "Enter MySQL password for 'zabbix' user: " MYSQL_PW
    echo
    read -s -p "Confirm MySQL password: " MYSQL_PW2
    echo
    if [[ "$MYSQL_PW" == "$MYSQL_PW2" && -n "$MYSQL_PW" ]]; then
        break
    fi
    echo "Passwords don't match or are empty."
done

# Create database and user
mysql -e "CREATE DATABASE IF NOT EXISTS zabbix CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;"
mysql -e "CREATE USER IF NOT EXISTS 'zabbix'@'localhost' IDENTIFIED BY '${MYSQL_PW}';"
mysql -e "GRANT ALL PRIVILEGES ON zabbix.* TO 'zabbix'@'localhost';"
mysql -e "FLUSH PRIVILEGES;"

# Install Zabbix packages if available
if [ -d "/data/zabbix-pkgs" ] && [ "$(ls -A /data/zabbix-pkgs/*.rpm 2>/dev/null)" ]; then
    dnf install -y /data/zabbix-pkgs/*.rpm
fi

# Zabbix Configuration
declare -A cfg
while true; do
    read -p "ProxyMode (0=active, 1=passive): " cfg[ProxyMode]
    if [[ "${cfg[ProxyMode]}" == "0" || "${cfg[ProxyMode]}" == "1" ]]; then
        break
    fi
done

read -p "Zabbix Server IP/Hostname: " cfg[Server]
read -p "Proxy Hostname: " cfg[Hostname]

# Create Zabbix config
mkdir -p /etc/zabbix
cat > /etc/zabbix/zabbix_proxy.conf << ZABBIXCONF
ProxyMode=${cfg[ProxyMode]}
Server=${cfg[Server]}
Hostname=${cfg[Hostname]}
TLSConnect=psk
TLSAccept=psk
TLSPSKFile=/data/zabbix/psk.key
TLSPSKIdentity=${cfg[Hostname]}
DBName=zabbix
DBUser=zabbix
DBPassword=${MYSQL_PW}
LogFile=/data/logs/zabbix_proxy.log
ZABBIXCONF

# Import schema if available
if command -v zabbix_proxy >/dev/null 2>&1; then
    mysql -e "SET GLOBAL log_bin_trust_function_creators=1;"
    if [ -f "/usr/share/zabbix-sql-scripts/mysql/proxy.sql" ]; then
        mysql -uzabbix -p"${MYSQL_PW}" zabbix < /usr/share/zabbix-sql-scripts/mysql/proxy.sql
    fi
    mysql -e "SET GLOBAL log_bin_trust_function_creators=0;"
    
    systemctl enable zabbix-proxy
    systemctl start zabbix-proxy
fi

# Firewall configuration
PRIVATE_NETS=("10.0.0.0/8" "172.16.0.0/12" "192.168.0.0/16")

firewall-cmd --permanent --set-default-zone=drop

for net in "${PRIVATE_NETS[@]}"; do
    firewall-cmd --permanent --zone=internal --add-source="$net"
done

firewall-cmd --permanent --zone=internal --add-port=10051/tcp
firewall-cmd --permanent --zone=internal --add-port=53/udp
firewall-cmd --permanent --zone=internal --add-port=80/tcp
firewall-cmd --permanent --zone=internal --add-port=443/tcp

firewall-cmd --reload

# Security lockdown
systemctl disable sshd 2>/dev/null || true
passwd -l root

# Display network info
echo -e "\n=== Network Interface MAC Addresses ==="
ip -o link show | awk '/link\/ether/ {print $2": "$18}' | grep -v lo:

echo -e "\n=== Setup Complete ==="

# Remove firstboot script
rm -f /root/firstboot.sh
sed -i '/firstboot.sh/d' /etc/rc.d/rc.local

FIRSTBOOT

chmod +x /root/firstboot.sh

# Schedule firstboot script
echo "/root/firstboot.sh" >> /etc/rc.d/rc.local
chmod +x /etc/rc.d/rc.local

%end
